services:
  # PostgreSQL Database
  - type: pserv
    name: faceblur-postgres
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile.postgres
    envVars:
      - key: POSTGRES_DB
        value: faceblur_db
      - key: POSTGRES_USER
        value: postgres
      - key: POSTGRES_PASSWORD
        generateValue: true

  # Web Service
  - type: web
    name: faceblur-api
    env: node
    buildCommand: npm install
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DB_HOST
        fromService:
          name: faceblur-postgres
          property: host
      - key: DB_PORT
        fromService:
          name: faceblur-postgres
          property: port
      - key: DB_NAME
        value: faceblur_db
      - key: DB_USER
        value: postgres
      - key: DB_PASSWORD
        fromService:
          name: faceblur-postgres
          property: password
      - key: SKIP_DB_MIGRATION_ON_ERROR
        value: true
      - key: JWT_SECRET
        generateValue: true
      # Hardcoded Cloudinary credentials
      - key: CLOUDINARY_CLOUD_NAME
        value: dzfd6igiw
      - key: CLOUDINARY_API_KEY
        value: "441935579452539"
      - key: CLOUDINARY_API_SECRET
        value: jvnxDIoNZYLFJ_OOQ57RM8aoY
      - key: CLOUDINARY_UPLOAD_PRESET
        value: Boom
      - key: CLOUDINARY_OVERWRITE
        value: true
      - key: CLOUDINARY_USE_FILENAME
        value: false
      - key: CLOUDINARY_UNIQUE_FILENAME
        value: false
      - key: CLOUDINARY_USE_FILENAME_AS_DISPLAY_NAME
        value: true
      - key: CLOUDINARY_USE_ASSET_FOLDER_AS_PUBLIC_ID_PREFIX
        value: false
      - key: CLOUDINARY_TYPE
        value: upload
      - key: CLOUDINARY_ASSET_FOLDER
        value: samples/new
      - key: REDIS_URL
        fromService:
          name: faceblur-redis
          property: url

  # Background Worker
  - type: worker
    name: faceblur-worker
    env: node
    buildCommand: npm install
    startCommand: npm run worker
    envVars:
      - key: NODE_ENV
        value: production
      - key: DB_HOST
        fromService:
          name: faceblur-postgres
          property: host
      - key: DB_PORT
        fromService:
          name: faceblur-postgres
          property: port
      - key: DB_NAME
        value: faceblur_db
      - key: DB_USER
        value: postgres
      - key: DB_PASSWORD
        fromService:
          name: faceblur-postgres
          property: password
      # Hardcoded Cloudinary credentials for worker
      - key: CLOUDINARY_CLOUD_NAME
        value: dzfd6igiw
      - key: CLOUDINARY_API_KEY
        value: "441935579452539"
      - key: CLOUDINARY_API_SECRET
        value: jvnxDIoNZYLFJ_OOQ57RM8aoY
      - key: CLOUDINARY_UPLOAD_PRESET
        value: Boom
      - key: CLOUDINARY_OVERWRITE
        value: true
      - key: CLOUDINARY_USE_FILENAME
        value: false
      - key: CLOUDINARY_UNIQUE_FILENAME
        value: false
      - key: CLOUDINARY_USE_FILENAME_AS_DISPLAY_NAME
        value: true
      - key: CLOUDINARY_USE_ASSET_FOLDER_AS_PUBLIC_ID_PREFIX
        value: false
      - key: CLOUDINARY_TYPE
        value: upload
      - key: CLOUDINARY_ASSET_FOLDER
        value: samples/new
      - key: REDIS_URL
        fromService:
          name: faceblur-redis
          property: url

  # Redis for Queue Management
  - type: pserv
    name: faceblur-redis
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile.redis